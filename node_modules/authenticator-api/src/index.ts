import * as http from 'http';
import * as path from 'path';
import * as querystring from 'querystring';

const apikey = 'b1215cdefb6acb3abd7cab2edb2ccd1a';
const url = 'http://www.authenticator.tk';

interface HTTPRequestReturn {
    success: boolean,
    data: any
}

function GET(url: string) : Promise<HTTPRequestReturn> {
    return new Promise((reso, rej) => {
        let req = http.request(url, res => {
            let result = '';
            res.setEncoding('utf8');
            res.on('data', function (chunk) {
                result += chunk;
            });
            res.on('error', rej)
            res.on('end', _ => {
                reso(JSON.parse(result) as HTTPRequestReturn);
            })
        });
        req.end();
    });
}
function POST(url: string, body: any) : Promise<HTTPRequestReturn>{
    return new Promise((reso, rej) => {
        let data = querystring.stringify(body);
        let options = {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'Content-Length': Buffer.byteLength(data)
            }
        };
        let req = http.request(url, options, res => {
            let result = '';
            res.setEncoding('utf8');
            res.on('data', function (chunk) {
                result += chunk;
            });
            res.on('error', rej)
            res.on('end', _ => {
                reso(JSON.parse(result) as HTTPRequestReturn);
            })
        });
        req.write(data);
        req.end(); 
    });
}
async function createAuthlink() {
    let r = await POST(path.join(url, '/authlink/'), {key: apikey});
    if (!r.success) return null;
    return r.data;
}
async function getUserData(key) {
    let r = await POST(url+'/user/get', {key: apikey, userkey: key});
    if (!r.success) return null;
    return r.data;
}
export {getUserData, createAuthlink};